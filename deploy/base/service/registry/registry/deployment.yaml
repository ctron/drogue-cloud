kind: Deployment
apiVersion: apps/v1
metadata:
  name: device-management-service
  labels:
    app.kubernetes.io/name: device-management-service
    app.kubernetes.io/part-of: device-registry
  annotations:
    app.openshift.io/connects-to: '[{"apiVersion":"apps/v1","kind":"Deployment","name":"postgres"}]'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: device-management-service
      app.kubernetes.io/part-of: device-registry
  template:
    metadata:
      labels:
        app.kubernetes.io/name: device-management-service
        app.kubernetes.io/part-of: device-registry
    spec:
      initContainers:
        - name: wait-for-client-secret
          image: registry.access.redhat.com/ubi8-minimal
          imagePullPolicy: IfNotPresent
          command:
            - bash
            - -c
            - |
              echo "Waiting for client secret to be populated (/etc/client-secret/CLIENT_SECRET)..."
              while test -z "$(cat /etc/client-secret/CLIENT_SECRET)"; do
                sleep 1
              done
          volumeMounts:
            - mountPath: /etc/client-secret
              name: client-secret
              readOnly: true
      containers:
        - name: service
          image: ghcr.io/drogue-iot/device-management-service:latest
          imagePullPolicy: Always
          env:
            - name: RUST_LOG
              value: info
            - name: RUST_BACKTRACE
              value: "1"
            # this is a workaround as the name of the variable conflicts with an automatically generated
            # variable from Kubernetes, which doesn't parse as an int
            - name: MQTT_ENDPOINT_PORT
              value: "0"
            - name: BIND_ADDR
              value: 0.0.0.0:8080
            - name: PG__HOST
              value: postgres
            - name: PG__DBNAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: databaseName
            - name: PG__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.username
            - name: PG__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: admin.password
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_ID
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: keycloak-client-secret-drogue
                  key: CLIENT_SECRET
            - name: INSTANCE
              valueFrom:
                configMapKeyRef:
                  name: configuration
                  key: instance
          readinessProbe:
            initialDelaySeconds: 2
            periodSeconds: 1
            failureThreshold: 3 # required by knative webhook
            timeoutSeconds: 1 # required by knative webhook
            httpGet:
              port: 8080
              path: /health
          ports:
            - containerPort: 8080
              name: api
              protocol: TCP
          resources:
            limits:
              memory: 128Mi
      volumes:
        - name: client-secret
          secret:
            secretName: keycloak-client-secret-drogue